{"ast":null,"code":"const API_URL = 'http://localhost:3000/api/users';\nexport const api = {\n  async getUsers() {\n    const response = await fetch(API_URL);\n    if (!response.ok) throw new Error('Failed to fetch users');\n    return response.json();\n  },\n  async createUser(user) {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    if (!response.ok) throw new Error('Failed to create user');\n    return response.json();\n  },\n  async updateUser(id, user) {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    if (!response.ok) throw new Error('Failed to update user');\n    return response.json();\n  },\n  async deleteUser(id) {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) throw new Error('Failed to delete user');\n  }\n};","map":{"version":3,"names":["API_URL","api","getUsers","response","fetch","ok","Error","json","createUser","user","method","headers","body","JSON","stringify","updateUser","id","deleteUser"],"sources":["d:/Deepu/R&D/Docker/Web/src/api.ts"],"sourcesContent":["import { User } from './types';\n\nconst API_URL = 'http://localhost:3000/api/users';\n\nexport const api = {\n  async getUsers(): Promise<User[]> {\n    const response = await fetch(API_URL);\n    if (!response.ok) throw new Error('Failed to fetch users');\n    return response.json();\n  },\n\n  async createUser(user: Omit<User, 'id'>): Promise<User> {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(user)\n    });\n    if (!response.ok) throw new Error('Failed to create user');\n    return response.json();\n  },\n\n  async updateUser(id: number, user: Omit<User, 'id'>): Promise<User> {\n    const response = await fetch(`${API_URL}/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(user)\n    });\n    if (!response.ok) throw new Error('Failed to update user');\n    return response.json();\n  },\n\n  async deleteUser(id: number): Promise<void> {\n    const response = await fetch(`${API_URL}/${id}`, { method: 'DELETE' });\n    if (!response.ok) throw new Error('Failed to delete user');\n  }\n};"],"mappings":"AAEA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,OAAO,MAAMC,GAAG,GAAG;EACjB,MAAMC,QAAQA,CAAA,EAAoB;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,CAAC;IACrC,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,UAAUA,CAACC,IAAsB,EAAiB;IACtD,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACJ,OAAO,EAAE;MACpCU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMQ,UAAUA,CAACC,EAAU,EAAEP,IAAsB,EAAiB;IAClE,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,IAAIgB,EAAE,EAAE,EAAE;MAC/CN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMU,UAAUA,CAACD,EAAU,EAAiB;IAC1C,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,IAAIgB,EAAE,EAAE,EAAE;MAAEN,MAAM,EAAE;IAAS,CAAC,CAAC;IACtE,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}